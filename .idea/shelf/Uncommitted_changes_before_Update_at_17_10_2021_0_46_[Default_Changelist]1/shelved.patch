Index: todo/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.contrib import admin\r\nfrom django.urls import path\r\nfrom . import views\r\n\r\nurlpatterns = [\r\n    path('', views.index),\r\n]
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/todo/urls.py b/todo/urls.py
--- a/todo/urls.py	
+++ b/todo/urls.py	
@@ -3,5 +3,6 @@
 from . import views
 
 urlpatterns = [
-    path('', views.index),
-]
\ No newline at end of file
+    path('', views.index, name='index'),
+    path('index1', views.index1, name='index1'),
+]
Index: todo/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.shortcuts import render\r\nfrom django.http.response import HttpResponse\r\n\r\n\r\ndef index(request):\r\n    return render(request, 'index.html', {\r\n        'title': 'Главная страница',\r\n    })
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/todo/views.py b/todo/views.py
--- a/todo/views.py	
+++ b/todo/views.py	
@@ -5,4 +5,10 @@
 def index(request):
     return render(request, 'index.html', {
         'title': 'Главная страница',
-    })
\ No newline at end of file
+    })
+
+
+def index1(request):
+    return render(request, 'index1.html', {
+        'title': '123123',
+    })
Index: tests/test.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tests/test.py b/tests/test.py
new file mode 100644
--- /dev/null	
+++ b/tests/test.py	
@@ -0,0 +1,10 @@
+import unittest
+
+
+class MyTestCase(unittest.TestCase):
+    def test_something(self):
+        self.assertEqual(True, False)
+
+
+if __name__ == '__main__':
+    unittest.main()
